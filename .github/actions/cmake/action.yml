name: "Run CMake"
description: "Runs all the steps to have a full cmake build targeting a folder."
inputs:
  source:
    description: "source folder"
    required: true
  build:
    description: "temporary build folder"
    required: true
    default: ${{runner.temp}}/build
  cache:
    description: "temporary cache folder"
    required: true
    default: ${{github.workspace}}/cache
  install:
    description: "folder to install to. if unspecified, installation is skipped"
  test:
    description: "set to non-null to enable ctest integration on this target"
  extra-flags:
    description: "flags to pass to cmake configure"
runs:
  using: "composite"
  steps:
    - name: Cache
      uses: actions/cache@v3
      with:
        path: ${{inputs.cache}}
        key: deps.${{inputs.source}}.${{runner.os}}.${{ hashFiles('**/*.cmake','**/CMakeLists.txt') }}
        restore-keys: deps.${{inputs.source}}.${{runner.os}}.

    - name: Configure
      run: cmake -S "${{inputs.source}}" -B "${{inputs.build}}" -DFETCHCONTENT_BASE_DIR="${{inputs.cache}}" -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} ${{inputs.extra-flags}}
      shell: bash

    - name: Build
      run: cmake --build "${{inputs.build}}" --config ${{env.BUILD_TYPE}}
      shell: bash

    - name: Install
      if: ${{inputs.install}}
      run: cmake --install "${{inputs.build}}" --prefix "${{inputs.install}}" --config ${{env.BUILD_TYPE}}
      shell: bash

    - name: Test
      if: ${{inputs.test}}
      run: ctest --test-dir "${{inputs.build}}" --output-on-failure --no-tests=error -C ${{env.BUILD_TYPE}}
      shell: bash
