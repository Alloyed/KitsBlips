#pragma once

#include <cstdint>

namespace kitdsp {
namespace PSX {
/* The raw representation of SPU presets, as you might find online*/
struct PresetBinaryChunk {
    uint16_t dAPF1;
    uint16_t dAPF2;
    int16_t vIIR;
    int16_t vCOMB1;
    int16_t vCOMB2;
    int16_t vCOMB3;
    int16_t vCOMB4;
    int16_t vWALL;
    int16_t vAPF1;
    int16_t vAPF2;
    uint16_t mLSAME;
    uint16_t mRSAME;
    uint16_t mLCOMB1;
    uint16_t mRCOMB1;
    uint16_t mLCOMB2;
    uint16_t mRCOMB2;
    uint16_t dLSAME;
    uint16_t dRSAME;
    uint16_t mLDIFF;
    uint16_t mRDIFF;
    uint16_t mLCOMB3;
    uint16_t mRCOMB3;
    uint16_t mLCOMB4;
    uint16_t mRCOMB4;
    uint16_t dLDIFF;
    uint16_t dRDIFF;
    uint16_t mLAPF1;
    uint16_t mRAPF1;
    uint16_t mLAPF2;
    uint16_t mRAPF2;
    int16_t vLIN;
    int16_t vRIN;
};

struct Preset {
    const char* name;
    const char* description;
    union {
        uint16_t raw[0x20];
        PresetBinaryChunk chunk;
    } data;
};

static constexpr size_t kNumPresets = 10;
static const Preset kPresets[] = {
    /* Name: Room, SPU mem required: 0x26C0 */
    {"Room",
     "",
     {
         0x007D, 0x005B, 0x6D80, 0x54B8, 0xBED0, 0x0000, 0x0000, 0xBA80,
         0x5800, 0x5300, 0x04D6, 0x0333, 0x03F0, 0x0227, 0x0374, 0x01EF,
         0x0334, 0x01B5, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
         0x0000, 0x0000, 0x01B4, 0x0136, 0x00B8, 0x005C, 0x8000, 0x8000,
     }},
    /* Name: Studio Small, SPU mem required: 0x1F40 */
    {
        "Studio Small",
        "",
        {
            0x0033, 0x0025, 0x70F0, 0x4FA8, 0xBCE0, 0x4410, 0xC0F0, 0x9C00,
            0x5280, 0x4EC0, 0x03E4, 0x031B, 0x03A4, 0x02AF, 0x0372, 0x0266,
            0x031C, 0x025D, 0x025C, 0x018E, 0x022F, 0x0135, 0x01D2, 0x00B7,
            0x018F, 0x00B5, 0x00B4, 0x0080, 0x004C, 0x0026, 0x8000, 0x8000,
        },
    },
    /* Name: Studio Medium, SPU mem required: 0x4840 */
    {
        "Studio Medium",
        "",
        {
            0x00B1, 0x007F, 0x70F0, 0x4FA8, 0xBCE0, 0x4510, 0xBEF0, 0xB4C0,
            0x5280, 0x4EC0, 0x0904, 0x076B, 0x0824, 0x065F, 0x07A2, 0x0616,
            0x076C, 0x05ED, 0x05EC, 0x042E, 0x050F, 0x0305, 0x0462, 0x02B7,
            0x042F, 0x0265, 0x0264, 0x01B2, 0x0100, 0x0080, 0x8000, 0x8000,
        },
    },
    /* Name: Studio Large, SPU mem required: 0x6FE0 */
    {
        "Studio Large",
        "",
        {
            0x00E3, 0x00A9, 0x6F60, 0x4FA8, 0xBCE0, 0x4510, 0xBEF0, 0xA680,
            0x5680, 0x52C0, 0x0DFB, 0x0B58, 0x0D09, 0x0A3C, 0x0BD9, 0x0973,
            0x0B59, 0x08DA, 0x08D9, 0x05E9, 0x07EC, 0x04B0, 0x06EF, 0x03D2,
            0x05EA, 0x031D, 0x031C, 0x0238, 0x0154, 0x00AA, 0x8000, 0x8000,
        },
    },
    /* Name: Hall, SPU mem required: 0xADE0 */
    {
        "Hall",
        "",
        {
            0x01A5, 0x0139, 0x6000, 0x5000, 0x4C00, 0xB800, 0xBC00, 0xC000,
            0x6000, 0x5C00, 0x15BA, 0x11BB, 0x14C2, 0x10BD, 0x11BC, 0x0DC1,
            0x11C0, 0x0DC3, 0x0DC0, 0x09C1, 0x0BC4, 0x07C1, 0x0A00, 0x06CD,
            0x09C2, 0x05C1, 0x05C0, 0x041A, 0x0274, 0x013A, 0x8000, 0x8000,
        },
    },
    /* Name: Half Echo, SPU mem required: 0x3C00 */
    {
        "Half Echo",
        "",
        {
            0x0017, 0x0013, 0x70F0, 0x4FA8, 0xBCE0, 0x4510, 0xBEF0, 0x8500,
            0x5F80, 0x54C0, 0x0371, 0x02AF, 0x02E5, 0x01DF, 0x02B0, 0x01D7,
            0x0358, 0x026A, 0x01D6, 0x011E, 0x012D, 0x00B1, 0x011F, 0x0059,
            0x01A0, 0x00E3, 0x0058, 0x0040, 0x0028, 0x0014, 0x8000, 0x8000,
        },
    },
    /* Name: Space Echo, SPU mem required: 0xF6C0 */
    {
        "Space Echo",
        "",
        {
            0x033D, 0x0231, 0x7E00, 0x5000, 0xB400, 0xB000, 0x4C00, 0xB000,
            0x6000, 0x5400, 0x1ED6, 0x1A31, 0x1D14, 0x183B, 0x1BC2, 0x16B2,
            0x1A32, 0x15EF, 0x15EE, 0x1055, 0x1334, 0x0F2D, 0x11F6, 0x0C5D,
            0x1056, 0x0AE1, 0x0AE0, 0x07A2, 0x0464, 0x0232, 0x8000, 0x8000,
        },
    },
    /* Name: Chaos Echo, SPU mem required: 0x18040 */
    {
        "Chaos Echo",
        "",
        {
            0x0001, 0x0001, 0x7FFF, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x8100,
            0x0000, 0x0000, 0x1FFF, 0x0FFF, 0x1005, 0x0005, 0x0000, 0x0000,
            0x1005, 0x0005, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
            0x0000, 0x0000, 0x1004, 0x1002, 0x0004, 0x0002, 0x8000, 0x8000,
        },
    },
    /* Name: Delay, SPU mem required: 0x18040 */
    {
        "Delay",
        "",
        {
            0x0001, 0x0001, 0x7FFF, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000,
            0x0000, 0x0000, 0x1FFF, 0x0FFF, 0x1005, 0x0005, 0x0000, 0x0000,
            0x1005, 0x0005, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
            0x0000, 0x0000, 0x1004, 0x1002, 0x0004, 0x0002, 0x8000, 0x8000,
        },
    },
    /* Name: Off, SPU mem required: 0x10 */
    {
        "Off",
        "",
        {
            0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
            0x0000, 0x0000, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001,
            0x0000, 0x0000, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001,
            0x0000, 0x0000, 0x0001, 0x0001, 0x0001, 0x0001, 0x0000, 0x0000,
        },
    },
};

}  // namespace PSX
}  // namespace kitdsp
